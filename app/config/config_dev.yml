imports:
    - { resource: config.yml }

parameters:
    app.metric_backend.class: App\Metrics\Backend\LogMetricBackend

doctrine:
    orm:
        metadata_cache_driver:
            type: service
            id: cache.local_redis
#            class: 'App\Redis\RedisLocalOnlyFactory:createRedisInstance'
#            instance_class: 'App\Redis\RedisClusterFactory:createRedisCluster'
#        result_cache_driver:
#            type: redis
#            host: localhost
#            port: 6379
#        query_cache_driver:
#            type: redis
#            host: localhost
#            port: 6379

framework:
    router:
        resource: '%kernel.project_dir%/app/config/routing_dev.yml'
        strict_requirements: true
    profiler: { only_exceptions: false }
    cache:
        pools:
            cache.programmes:
                provider: 'cache.default_redis_provider'

web_profiler:
    toolbar: true
    intercept_redirects: false
    excluded_ajax_paths: ^/bundles|^/_wdt|^https://ssl(?:\.test)?.bbc.co.uk/idcta/init

monolog:
    handlers:
        main:
            type: stream
            path: '%kernel.logs_dir%/%kernel.environment%.log'
            level: debug
            channels: ['!event', '!app_access']
        app_access:
            type: stream
            channels: ['app_access']
            path: '%kernel.logs_dir%/%kernel.environment%-access.log'
            level: debug
        console:
            type: console
            process_psr_3_messages: false
            channels: ['!event','!doctrine', '!console']
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type: firephp
        #    level: info
        #chromephp:
        #    type: chromephp
        #    level: info
