parameters:
    app.default_locale: 'en_GB'
    app.orbit_client.class: BBC\BrandingClient\OrbitClient
    app.branding_client.class: BBC\BrandingClient\BrandingClient
    app.metric_cache.class: App\Metrics\Cache\MetricCacheApcu
    app.metric_backend.class: App\Metrics\Backend\CloudWatchMetricBackend
    frontend.aws.http_timeout: 15
    frontend.aws.http_connect_timeout: 5

    # External Apis
    app.electron.baseurl: 'https://api.live.bbc.co.uk/electron'
    app.electron.service.class: App\ExternalApi\Electron\Service\ElectronService
    app.receng.baseurl: 'https://open.live.bbc.co.uk/recommend/items'
    app.receng.service.class: App\ExternalApi\RecEng\Service\RecEngService
    app.recipes.baseurl: 'https://api.live.bbc.co.uk/food/recipes'
    app.recipes.service.class: App\ExternalApi\Recipes\Service\RecipesService

services:

    _defaults:
        autoconfigure: true
        autowire: true
        public: false

    # Autowire all necessary Twig, Argument resolver and Event Subscriber services
    App\:
        resource: '../src/{ArgumentResolver,Ds2013,DsAmen,DsShared,ExternalApi,Branding,Translate,Twig}'

    # Autowire controllers in the DI layer and make them public
    App\Controller\:
        resource: '../src/Controller'
        public: true # Mandatory


    ### Begin the services!

    # Event Subscribers
    App\EventSubscriber\FindByPidRouterSubscriber: ~
    App\EventSubscriber\ResponseSubscriber: ~
    App\EventSubscriber\CacheFlushSubscriber: ~
    App\EventSubscriber\MonitoringSubscriber:
        tags:
            - { name: 'kernel.event_subscriber' }
            - { name: 'monolog.logger', channel: 'app_access' }

    App\ValueObject\CosmosInfo:
        arguments: ['%cosmos_component_release%', '%cosmos_environment%']

    App\Redis\RedisClusterFactory: ~

    App\Controller\ExceptionController:
        public: true
        arguments:
            $debug: '%kernel.debug%'

    ### Argument Value Resolvers

    App\ArgumentResolver\ContextEntityByPidValueResolver:
        tags: [{name: 'controller.argument_value_resolver', priority: 0 }]

    # This needs to be triggered before the RequestAttributeValueResolver,
    # which has a priority of 100
    App\ArgumentResolver\IdentifierValueResolver:
        tags: [{name: 'controller.argument_value_resolver', priority: 125 }]

    ### Caches

    cache.null_provider:
        class: Symfony\Component\Cache\Adapter\NullAdapter

    # we need an instance of RedisCluster, default Redis class doesn't support cluster mode.
    # RedisCluster class support most Redis operations
    cache.default_redis_provider:
        factory: 'App\Redis\RedisClusterFactory:createRedisCluster'
        class: App\Redis\RedisClusterFactory
        arguments:
            - ['%redis_endpoint%']
            - '@logger'
        tags:
            - { name: 'monolog.logger', channel: 'cache' }

    ### Http Clients

    BBC\BrandingClient\OrbitClient:
        class: '%app.orbit_client.class%'
        arguments:
            - '@csa_guzzle.client.default'
            - '@cache.programmes'
            - env: '%app.feed_env.orbit%'
              cacheKeyPrefix: 'programmes-frontend.%cosmos_component_release%.orbit'
              mustache: { cache: '%kernel.cache_dir%/mustache' }

    BBC\BrandingClient\BrandingClient:
        class: '%app.branding_client.class%'
        arguments:
            - '@csa_guzzle.client.default'
            - '@cache.programmes'
            - env: '%app.feed_env.branding%'
              cacheKeyPrefix: 'programmes-frontend.%cosmos_component_release%.branding'

    ### Translations

    RMP\Translate\TranslateFactory:
        arguments:
            - fallback_locale: 'en_GB'
              cachepath: '%kernel.cache_dir%/translations'
              domains: ['programmes']
              default_domain: 'programmes'
              debug: '%kernel.debug%'
              basepath: '%kernel.project_dir%/translations'

    ### Monitoring

    App\Metrics\MetricsManager: ~

    App\Metrics\MetricsMiddleware:
        tags:
            - { name: 'csa_guzzle.middleware', alias: 'metrics_middleware', pritority: 90 }

    App\ExternalApi\CircuitBreaker\CircuitBreakerMiddleware:
        tags:
            - { name: 'csa_guzzle.middleware', alias: 'circuit_breaker_middleware', pritority: 100 }

    RMP\CloudwatchMonitoring\MonitoringHandler:
        arguments:
            $namespace: 'frontend'
            $env: '%cosmos_environment%'

    Aws\CloudWatch\CloudWatchClient:
        arguments:
            - region: '%aws_s3_region%'
              version: '2010-08-01'
              http:
                timeout: '%frontend.aws.http_timeout%'
                connect_timeout: '%frontend.aws.http_connect_timeout%'


    App\Metrics\Backend\MetricBackendInterface:
        class: '%app.metric_backend.class%'

    App\Metrics\Cache\MetricCacheInterface:
        class: "%app.metric_cache.class%"

    ### Programmes Service

    BBC\ProgrammesPagesService\Cache\CacheInterface:
        alias: BBC\ProgrammesPagesService\Cache\Cache

    BBC\ProgrammesPagesService\Cache\Cache:
        arguments: ['@cache.programmes', 'programmes-frontend.%cosmos_component_release%']

    BBC\ProgrammesPagesService\Mapper\ProgrammesDbToDomain\MapperFactory: ~

    BBC\ProgrammesPagesService\Service\ServiceFactory:
        public: true

    BBC\ProgrammesPagesService\Service\SegmentEventsService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getSegmentEventsService']

    BBC\ProgrammesPagesService\Service\BroadcastsService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getBroadcastsService']

    BBC\ProgrammesPagesService\Service\CollapsedBroadcastsService:
            factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getCollapsedBroadcastsService']

    BBC\ProgrammesPagesService\Service\ImagesService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getImagesService']

    BBC\ProgrammesPagesService\Service\NetworksService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getNetworksService']

    BBC\ProgrammesPagesService\Service\ProgrammesService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getProgrammesService']

    BBC\ProgrammesPagesService\Service\ProgrammesAggregationService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getProgrammesAggregationService']

    BBC\ProgrammesPagesService\Service\PromotionsService:
         factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getPromotionsService']

    BBC\ProgrammesPagesService\Service\RelatedLinksService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getRelatedLinksService']

    BBC\ProgrammesPagesService\Service\ServicesService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getServicesService']

    BBC\ProgrammesPagesService\Service\VersionsService:
        factory: ['@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getVersionsService']

    ### Cache null adapter for the status controller
    null_cache:
        class: 'BBC\ProgrammesPagesService\Cache\Cache'
        arguments:
            - '@cache.null_provider'
            - 'nullcache'

    null_cache_service_factory:
        class: BBC\ProgrammesPagesService\Service\ServiceFactory
        public: true
        arguments:
            $cache: '@null_cache'

    App\Controller\StatusController:
        public: true
        arguments:
            - '@null_cache_service_factory'

    # API services
    App\ExternalApi\Electron\Service\ElectronService:
        class: '%app.electron.service.class%'
        arguments:
            $baseUrl: '%app.electron.baseurl%'

    App\ExternalApi\RecEng\Service\RecEngService:
        class: '%app.receng.service.class%'
        arguments:
            $baseUrl: '%app.receng.baseurl%'
            $audioKey: '%receng_audio_key%'
            $videoKey: '%receng_video_key%'

    App\ExternalApi\Recipes\Service\RecipesService:
        class: '%app.recipes.service.class%'
        arguments:
            $baseUrl: '%app.recipes.baseurl%'
